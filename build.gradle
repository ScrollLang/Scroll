import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
	id 'com.github.johnrengelman.shadow' version '8.1.1'
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
	id 'java'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
}

loom {
	splitEnvironmentSourceSets()

	mods {
		scroll {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Reflections
	include(implementation('org.reflections:reflections:0.10.2'))

	// TOML
	include(implementation('org.tomlj:tomlj:1.1.0'))

	// skript-parser
	include(implementation(project(':skript-parser')))
}

processResources {
	inputs.property 'version', project.version
	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from('LICENSE') {
		rename {
			"${it}_${project.base.archivesName.get()}"
		}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}

processResources {
	filter ReplaceTokens, tokens: ["version": project.property("version")]
}

build {
	dependsOn shadowJar
}

shadowJar {
	configurations = [project.configurations.include]
	archiveVersion = project.property("version")
	from sourceSets.client.output
}
